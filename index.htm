<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Webcam Difference</title>
    <style>
        body { 
            margin: 0; 
            padding: 0; 
            overflow: hidden; 
            display: flex; 
            min-height: 100vh; 
            background: #373B44;  /* fallback for old browsers */
background: -webkit-linear-gradient(to right, #4286f4, #373B44);  /* Chrome 10-25, Safari 5.1-6 */
background: linear-gradient(to right, #4286f4, #373B44); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */
}
        
        #mainContainer { display: flex; width: 100%; height: calc(100vh - 60px); }
        
        #leftColumn { 
            flex: 2; 
            display: flex; 
            justify-content: center; 
            align-items: top; 
            padding: 20px; 
        }
        
        #rightColumn { 
            flex: 1; 
            display: flex; 
            flex-direction: column; 
            padding: 20px; 
            gap: 15px; 
        }
        
        #webglCanvas { 
            border: 1px solid #555; 
            max-width: 100%; 
            max-height: 100%; 
        }
        
        #videoContainer { 
            display: flex; 
            flex-direction: column; 
            gap: 10px; 
            height: 100%;
            justify-content: flex-start;
        }
        
        #webcamVideo { 
            width: 100%; 
            height: 33%; 
            border: 1px solid #2f0974; 
        }
        
        #grayscaleCanvas { 
            border: 1px solid #555; 
            width: 100%; 
            height: 33%; 
        }
        
        #detectionCanvas { 
            border: 1px solid #2f0974;; 
            width: 100%; 
            height: 33%; 
        }
        
        #footer { 
            position: fixed; 
            bottom: 8px; 
            left: 8px; 
            z-index: 10; 
            color: #fff; 
            font-family: monospace; 
            border-top: 3px solid #2f0974;; 
            padding: 12px 16px; 
            width: calc(100% - 16px - 32px); 
            height: 26px; 
            display: flex; 
            justify-content: space-between; 
            align-items: center; 
            background: rgba(55, 59, 68, 0.9);
            backdrop-filter: blur(5px);
        }
        #controls { 
            position: relative; 
            z-index: 10; 
            color: #fff; 
            font-family: monospace; 
            display: flex; 
            align-items: center; 
            gap: 10px; 
        }
    </style>
</head>
<body>
    <div id="mainContainer">
        <div id="leftColumn">
            <canvas id="webglCanvas"></canvas>
        </div>
        
        <div id="rightColumn">
            <div id="videoContainer">
                <video id="webcamVideo" autoplay playsinline></video>
                <canvas id="grayscaleCanvas"></canvas>
                <canvas id="detectionCanvas"></canvas>
            </div>
        </div>
    </div>

    <!-- Inserted: user-trigger (helps avoid some automatic permission issues) and a status area -->
    
    <div id="footer">
        <span>Demo Vision System for Demonstration</span>
        <div id="controls">
            <button id="startBtn">Start Camera</button>
            <span id="status"></span>
        </div>
    </div>

    <script id="vertex-shader" type="x-shader/x-vertex">
        #version 300 es
        in vec4 a_position;
        in vec2 a_texCoord;
        out vec2 v_texCoord;

        void main() {
            gl_Position = a_position;
            v_texCoord = a_texCoord;
        }
    </script>

    <script id="copy-fragment-shader" type="x-shader/x-fragment">
        #version 300 es
        precision mediump float;
        uniform sampler2D u_image;
        in vec2 v_texCoord;
        out vec4 fragColor;

        void main() {
            fragColor = texture(u_image, v_texCoord);
        }
    </script>

    <script id="difference-fragment-shader" type="x-shader/x-fragment">
        #version 300 es
        precision mediump float;
        uniform sampler2D u_imageA; // Current frame
        uniform sampler2D u_imageB; // Previous frame
        in vec2 v_texCoord;
        out vec4 fragColor;

        void main() {
            vec4 colorA = texture(u_imageA, v_texCoord);
            vec4 colorB = texture(u_imageB, v_texCoord);

            // Calculate the absolute difference for each color channel (RGBA)
            // You might want to experiment with different difference metrics:
            // - abs(colorA.rgb - colorB.rgb) for just color, ignoring alpha
            // - length(colorA.rgb - colorB.rgb) for scalar magnitude
            float difference = dot(abs(colorA.rgb - colorB.rgb), vec3(0.2126, 0.7152, 0.0722));// for grayscale luminance difference
            //vec4 difference = abs(colorA - colorB);

            // Output the luminance difference as grayscale
            fragColor = vec4(vec3(difference), 1.0);
        }
    </script>

    <script id="grayscale-fragment-shader" type="x-shader/x-fragment">
        #version 300 es
        precision mediump float;
        uniform sampler2D u_image;
        in vec2 v_texCoord;
        out vec4 fragColor;

        void main() {
            vec4 color = texture(u_image, v_texCoord);
            
            // Convert to grayscale using luminance weights
            float gray = dot(color.rgb, vec3(0.2126, 0.7152, 0.0722));
            
            // Output as grayscale
            fragColor = vec4(vec3(gray), 1.0);
        }
    </script>

    <script src="script.js"></script>
</body>
</html>